version: '3.8'

services:
  # Frontend Web Service
  web:
    build: .
    ports:
      - "8080:80"
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    volumes:
      - ./index.html:/usr/share/nginx/html/index.html:ro
    networks:
      - lab-network
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API Service
  api:
    build: 
      context: ./api
      dockerfile: ../Dockerfile.api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
    networks:
      - lab-network
    volumes:
      - ./api:/app:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database Service
  database:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: labpassword
      MYSQL_DATABASE: labdb
      MYSQL_USER: labuser
      MYSQL_PASSWORD: labpass
    ports:
      - "3306:3306"
    networks:
      - lab-network
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Cache Service
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - lab-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data:

networks:
  lab-network:
    driver: bridge